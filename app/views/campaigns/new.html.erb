<% content_for :title, "Campaign Builder" %>
<% content_for :head do %>
  <script src="https://unpkg.com/sortablejs@latest/Sortable.min.js"></script>
<% end %>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
    
    body {
      font-family: 'Inter', sans-serif;
    }
    
    .builder-content {
      animation: fadeInUp 0.6s ease-out;
    }
    
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .hover-lift {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .hover-lift:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    }
    
    .drag-item {
      cursor: grab;
      transition: all 0.2s ease;
    }
    
    .drag-item:active {
      cursor: grabbing;
      transform: rotate(5deg);
    }
    
    .drop-zone {
      min-height: 100px;
      border: 2px dashed #e5e7eb;
      border-radius: 12px;
      transition: all 0.3s ease;
    }
    
    .drop-zone.drag-over {
      border-color: #8b5cf6;
      background-color: #f3f4f6;
    }
    
    .canvas-area {
      min-height: 600px;
      background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    }
    
    .component-preview {
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      padding: 12px;
      margin: 8px 0;
      background: white;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .component-preview:hover {
      border-color: #8b5cf6;
      box-shadow: 0 4px 12px rgba(139, 92, 246, 0.15);
    }
    
    .selected-component {
      border-color: #8b5cf6;
      box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
    }
    
    .stagger-animation {
      animation-delay: var(--delay, 0s);
    }
    
    .pulse-dot {
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0%, 100% {
        opacity: 1;
      }
      50% {
        opacity: 0.6;
      }
    }
    
    .sidebar-scroll {
      max-height: calc(100vh - 200px);
      overflow-y: auto;
    }
    
    .sidebar-scroll::-webkit-scrollbar {
      width: 6px;
    }
    
    .sidebar-scroll::-webkit-scrollbar-track {
      background: #f1f5f9;
      border-radius: 3px;
    }
    
    .sidebar-scroll::-webkit-scrollbar-thumb {
      background: #cbd5e1;
      border-radius: 3px;
    }
    
    .sidebar-scroll::-webkit-scrollbar-thumb:hover {
      background: #94a3b8;
    }
  </style>

<div class="min-h-screen bg-gradient-to-br from-purple-50 via-indigo-50 to-pink-50">
  <!-- Header Section -->
  <div class="bg-white border-b border-gray-200 shadow-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between h-16">
        <div class="flex items-center space-x-4">
          <div class="w-10 h-10 bg-gradient-to-r from-purple-500 to-indigo-600 rounded-xl flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
            </svg>
          </div>
          <div>
            <h1 class="text-xl font-bold text-gray-900">Campaign Builder</h1>
            <p class="text-sm text-gray-600">Create stunning email campaigns</p>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <div class="flex items-center space-x-2 px-3 py-2 bg-green-50 rounded-lg">
            <div class="w-2 h-2 bg-green-400 rounded-full pulse-dot"></div>
            <span class="text-sm font-medium text-green-700">Auto-saved</span>
          </div>
          
          <button type="button" id="preview-btn" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
            Preview
          </button>
          
          <button type="submit" form="campaign-form" class="px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-purple-500 to-indigo-600 rounded-lg hover:from-purple-600 hover:to-indigo-700 transition-all shadow-lg hover:shadow-xl">
            Save Campaign
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Builder Interface -->
  <%= form_with model: @campaign, local: true, id: "campaign-form", class: "flex h-screen" do |form| %>
    <!-- Left Sidebar - Components Library -->
    <div class="w-80 bg-white border-r border-gray-200 shadow-sm">
      <div class="p-6">
        <div class="flex items-center space-x-3 mb-6">
          <div class="w-8 h-8 bg-gradient-to-br from-purple-100 to-indigo-100 rounded-lg flex items-center justify-center">
            <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-7H5a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2V6a2 2 0 00-2-2z"></path>
            </svg>
          </div>
          <h2 class="text-lg font-semibold text-gray-900">Components</h2>
        </div>
        
        <!-- Component Categories -->
        <div class="space-y-4 sidebar-scroll">
          <!-- Text Components -->
          <div class="builder-content stagger-animation" style="--delay: 0.1s">
            <h3 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-4 h-4 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path>
              </svg>
              Text Elements
            </h3>
            <div class="space-y-2">
              <div class="component-preview drag-item hover-lift" data-component="heading">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Heading</p>
                    <p class="text-xs text-gray-500">Large title text</p>
                  </div>
                </div>
              </div>
              
              <div class="component-preview drag-item hover-lift" data-component="paragraph">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Paragraph</p>
                    <p class="text-xs text-gray-500">Body text content</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Media Components -->
          <div class="builder-content stagger-animation" style="--delay: 0.2s">
            <h3 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-4 h-4 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              Media
            </h3>
            <div class="space-y-2">
              <div class="component-preview drag-item hover-lift" data-component="image">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Image</p>
                    <p class="text-xs text-gray-500">Upload or link image</p>
                  </div>
                </div>
              </div>
              
              <div class="component-preview drag-item hover-lift" data-component="video">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293H15M9 10V9a2 2 0 012-2h2a2 2 0 012 2v1M9 10v5a2 2 0 002 2h2a2 2 0 002-2v-5"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Video</p>
                    <p class="text-xs text-gray-500">Embed video content</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Interactive Components -->
          <div class="builder-content stagger-animation" style="--delay: 0.3s">
            <h3 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-4 h-4 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"></path>
              </svg>
              Interactive
            </h3>
            <div class="space-y-2">
              <div class="component-preview drag-item hover-lift" data-component="button">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-indigo-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Button</p>
                    <p class="text-xs text-gray-500">Call-to-action button</p>
                  </div>
                </div>
              </div>
              
              <div class="component-preview drag-item hover-lift" data-component="divider">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Divider</p>
                    <p class="text-xs text-gray-500">Section separator</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Layout Components -->
          <div class="builder-content stagger-animation" style="--delay: 0.4s">
            <h3 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-4 h-4 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
              </svg>
              Layout
            </h3>
            <div class="space-y-2">
              <div class="component-preview drag-item hover-lift" data-component="columns">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Columns</p>
                    <p class="text-xs text-gray-500">Multi-column layout</p>
                  </div>
                </div>
              </div>
              
              <div class="component-preview drag-item hover-lift" data-component="spacer">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-pink-100 rounded-lg flex items-center justify-center">
                    <svg class="w-4 h-4 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Spacer</p>
                    <p class="text-xs text-gray-500">Add vertical space</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Center Canvas Area -->
    <div class="flex-1 canvas-area p-8">
      <div class="max-w-5xl mx-auto">
        <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
          <!-- Email Header Preview -->
          <div class="bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-3">
                <div class="w-8 h-8 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-lg flex items-center justify-center">
                  <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                  </svg>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900">From: <span id="from-name-preview"><%= @campaign.from_name.presence || current_user.account.name || 'Your Company' %></span></p>
                  <p class="text-xs text-gray-600"><span id="from-email-preview"><%= @campaign.from_email.presence || current_user.email %></span></p>
                </div>
              </div>
              <div class="text-xs text-gray-500">
                <%= Time.current.strftime('%b %d, %Y') %>
              </div>
            </div>
            <div class="mt-3">
              <%= form.text_field :subject, 
                    class: "py-2 px-3 w-full text-lg font-semibold text-gray-900 bg-transparent border-none outline-none", 
                    placeholder: "Enter your email subject line...",
                    id: "campaign-subject" %>
            </div>
          </div>
          
          <!-- Email Body Canvas -->
          <div id="email-canvas" class="min-h-96 p-6 drop-zone">
            <div class="text-center py-16 text-gray-400">
              <div class="w-16 h-16 bg-gradient-to-br from-purple-100 to-indigo-100 rounded-2xl flex items-center justify-center mx-auto mb-6">
                <svg class="w-8 h-8 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
              <p class="text-lg font-medium text-gray-500 mb-2">Start building your email</p>
              <p class="text-sm text-gray-400">Drag components from the left sidebar to begin</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Right Sidebar - Properties Panel -->
    <div class="w-80 bg-white border-l border-gray-200 shadow-sm">
      <div class="p-6">
        <div class="flex items-center space-x-3 mb-6">
          <div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-lg flex items-center justify-center">
            <svg class="w-4 h-4 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
            </svg>
          </div>
          <h2 class="text-lg font-semibold text-gray-900">Properties</h2>
        </div>
        
        <!-- Campaign Settings -->
        <div class="space-y-6 sidebar-scroll">
          <div class="builder-content stagger-animation" style="--delay: 0.1s">
            <div class="bg-gradient-to-br from-purple-50 to-indigo-50 rounded-xl p-4 border border-purple-100">
              <h3 class="text-sm font-medium text-gray-900 mb-4 flex items-center">
                <svg class="w-4 h-4 mr-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                Campaign Settings
              </h3>
              
              <div class="space-y-4">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">Campaign Name</label>
                  <%= form.text_field :name, 
                        class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent", 
                        placeholder: "Enter campaign name" %>
                </div>
                
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">Template</label>
                  <%= form.collection_select :template_id, @templates, :id, :name, 
                        { prompt: "Select a template" }, 
                        { class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" } %>
                </div>
                
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">From Name</label>
                  <%= form.text_field :from_name, 
                        class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent", 
                        placeholder: "Your name or company",
                        value: @campaign.from_name.presence || current_user.account.name,
                        onchange: "updatePreview('from-name-preview', this.value)" %>
                </div>
                
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">From Email</label>
                  <%= form.email_field :from_email, 
                        class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent", 
                        placeholder: "your@email.com",
                        value: @campaign.from_email.presence || current_user.email,
                        onchange: "updatePreview('from-email-preview', this.value)" %>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Audience Selection -->
          <div class="builder-content stagger-animation" style="--delay: 0.2s">
            <div class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl p-4 border border-green-100">
              <h3 class="text-sm font-medium text-gray-900 mb-4 flex items-center">
                <svg class="w-4 h-4 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Audience
              </h3>
              
              <div class="space-y-4">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">Recipient Type</label>
                  <%= form.select :recipient_type, 
                        options_for_select([
                          ['All Contacts', 'all'],
                          ['By Tags', 'tags'],
                          ['Custom Selection', 'custom']
                        ], @campaign.recipient_type || 'all'), 
                        {}, 
                        { class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent",
                          onchange: "toggleTagSelection(this.value)" } %>
                </div>
                
                <div id="tag-selection" class="<%= 'hidden' unless @campaign.recipient_type == 'tags' %>">
                  <label class="block text-xs font-medium text-gray-700 mb-2">Select Tags</label>
                  <div class="space-y-2 max-h-32 overflow-y-auto">
                    <% if @tags&.any? %>
                      <% @tags.each do |tag| %>
                        <label class="flex items-center">
                          <%= check_box_tag "campaign[tag_ids][]", tag.id,
                                @campaign.tag_ids.include?(tag.id),
                                { class: "text-green-600 focus:ring-green-500",
                                  onchange: "updateRecipientCount()" } %>
                          <span class="ml-2 text-sm text-gray-700"><%= tag.name %></span>
                          <span class="ml-auto text-xs text-gray-500">(<%= tag.contacts.count %>)</span>
                        </label>
                      <% end %>
                    <% else %>
                      <div class="text-center py-4">
                        <div class="text-sm text-gray-500 mb-2">No tags available</div>
                        <%= link_to "Create your first tag", new_tag_path,
                            class: "text-xs text-purple-600 hover:text-purple-700 font-medium" %>
                      </div>
                    <% end %>
                  </div>
                </div>
                
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">Estimated Recipients</label>
                  <div class="flex items-center space-x-2 px-3 py-2 bg-white rounded-lg border border-gray-200">
                    <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    <span class="text-sm font-medium text-gray-900" id="recipient-count"><%= @contacts&.count || 0 %> contacts</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Scheduling Options -->
          <div class="builder-content stagger-animation" style="--delay: 0.3s">
            <div class="bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl p-4 border border-blue-100">
              <h3 class="text-sm font-medium text-gray-900 mb-4 flex items-center">
                <svg class="w-4 h-4 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Scheduling
              </h3>
              
              <div class="space-y-4">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-2">Send Option</label>
                  <div class="space-y-2">
                    <label class="flex items-center">
                      <%= form.radio_button :send_type, "now", 
                            { class: "text-blue-600 focus:ring-blue-500", 
                              checked: @campaign.send_type != "scheduled",
                              onchange: "toggleScheduleOptions(this.value)" } %>
                      <span class="ml-2 text-sm text-gray-700">Send Now</span>
                    </label>
                    <label class="flex items-center">
                      <%= form.radio_button :send_type, "scheduled", 
                            { class: "text-blue-600 focus:ring-blue-500",
                              onchange: "toggleScheduleOptions(this.value)" } %>
                      <span class="ml-2 text-sm text-gray-700">Schedule for Later</span>
                    </label>
                  </div>
                </div>
                
                <div id="schedule-options" class="<%= 'hidden' unless @campaign.send_type == 'scheduled' %>">
                  <div class="space-y-3">
                    <div>
                      <label class="block text-xs font-medium text-gray-700 mb-1">Scheduled Date & Time</label>
                      <%= form.datetime_local_field :scheduled_at, 
                            class: "w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                            min: Time.current.strftime("%Y-%m-%dT%H:%M") %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Component Properties (Dynamic) -->
          <div id="component-properties" class="builder-content stagger-animation hidden" style="--delay: 0.4s">
            <div class="bg-gradient-to-br from-orange-50 to-red-50 rounded-xl p-4 border border-orange-100">
              <h3 class="text-sm font-medium text-gray-900 mb-4 flex items-center">
                <svg class="w-4 h-4 mr-2 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 011-1h1a2 2 0 100-4H7a1 1 0 01-1-1V7a1 1 0 011-1h3a1 1 0 001-1V4z"></path>
                </svg>
                Component Properties
              </h3>
              
              <div id="properties-content">
                <p class="text-sm text-gray-500 text-center py-4">Select a component to edit its properties</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Bottom Toolbar -->
  <div class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 shadow-lg">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between h-16">
        <div class="flex items-center space-x-4">
          <div class="flex items-center space-x-2 text-sm text-gray-600">
            <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>Auto-saved 2 minutes ago</span>
          </div>
        </div>
        
        <div class="flex items-center space-x-3">
          <button class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
            <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            </svg>
            Preview
          </button>
          
          <button class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
            <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            Send Test
          </button>
          
          <button class="px-6 py-2 text-sm font-medium text-white bg-gradient-to-r from-purple-500 to-indigo-600 rounded-lg hover:from-purple-600 hover:to-indigo-700 transition-all shadow-lg hover:shadow-xl">
            <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
            </svg>
            Launch Campaign
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- JavaScript for Drag & Drop and Interactivity -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize drag and drop
      const canvas = document.getElementById('email-canvas');
      const componentPreviews = document.querySelectorAll('.component-preview');
      const propertiesPanel = document.getElementById('component-properties');
      const propertiesContent = document.getElementById('properties-content');
      
      // Make canvas sortable
      new Sortable(canvas, {
        group: 'email-builder',
        animation: 150,
        ghostClass: 'opacity-50',
        chosenClass: 'selected-component',
        onAdd: function(evt) {
          const componentType = evt.item.dataset.component;
          const newElement = createComponent(componentType);
          evt.item.replaceWith(newElement);
          
          // Clear empty state
          const emptyState = canvas.querySelector('.text-center.py-16');
          if (emptyState) {
            emptyState.remove();
          }
        }
      });
      
      // Make component library sortable
      componentPreviews.forEach(preview => {
        new Sortable(preview.parentElement, {
          group: {
            name: 'email-builder',
            pull: 'clone',
            put: false
          },
          sort: false
        });
      });
      
      // Component creation functions
      function createComponent(type) {
        const wrapper = document.createElement('div');
        wrapper.className = 'component-wrapper mb-4 p-3 border border-gray-200 rounded-lg hover:border-purple-400 cursor-pointer transition-colors';
        wrapper.dataset.componentType = type;
        
        let content = '';
        
        switch(type) {
          case 'heading':
            content = '<h2 class="text-2xl font-bold text-gray-900 editable" contenteditable="true">Your Heading Here</h2>';
            break;
          case 'paragraph':
            content = '<p class="text-gray-700 leading-relaxed editable" contenteditable="true">Your paragraph content goes here. Click to edit this text and customize it for your email campaign.</p>';
            break;
          case 'image':
            content = `
              <div class="text-center">
                <div class="w-full h-48 bg-gray-100 rounded-lg flex items-center justify-center border-2 border-dashed border-gray-300">
                  <div class="text-center">
                    <svg class="w-12 h-12 text-gray-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    <p class="text-sm text-gray-500">Click to upload image</p>
                  </div>
                </div>
              </div>
            `;
            break;
          case 'button':
            content = `
              <div class="text-center">
                <a href="#" class="inline-block px-6 py-3 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-medium rounded-lg hover:from-purple-600 hover:to-indigo-700 transition-all editable" contenteditable="true">Call to Action</a>
              </div>
            `;
            break;
          case 'divider':
            content = '<hr class="border-gray-300 my-6">';
            break;
          case 'columns':
            content = `
              <div class="grid grid-cols-2 gap-6">
                <div class="p-4 border border-gray-200 rounded-lg min-h-24 drop-zone">
                  <p class="text-sm text-gray-500 text-center">Column 1 - Drop content here</p>
                </div>
                <div class="p-4 border border-gray-200 rounded-lg min-h-24 drop-zone">
                  <p class="text-sm text-gray-500 text-center">Column 2 - Drop content here</p>
                </div>
              </div>
            `;
            break;
          case 'spacer':
            content = '<div class="h-12"></div>';
            break;
          default:
            content = '<p class="text-gray-500">Unknown component</p>';
        }
        
        wrapper.innerHTML = content + `
          <div class="component-controls absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
            <button class="delete-component w-6 h-6 bg-red-500 text-white rounded-full flex items-center justify-center text-xs hover:bg-red-600">
              ×
            </button>
          </div>
        `;
        
        // Add event listeners
        wrapper.addEventListener('click', () => selectComponent(wrapper, type));
        
        const deleteBtn = wrapper.querySelector('.delete-component');
        if (deleteBtn) {
          deleteBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            wrapper.remove();
            hideProperties();
          });
        }
        
        return wrapper;
      }
      
      // Component selection and properties
      function selectComponent(element, type) {
        // Remove previous selection
        document.querySelectorAll('.component-wrapper').forEach(el => {
          el.classList.remove('selected-component');
        });
        
        // Select current component
        element.classList.add('selected-component');
        
        // Show properties panel
        showProperties(type, element);
      }
      
      function showProperties(type, element) {
        propertiesPanel.classList.remove('hidden');
        
        let propertiesHTML = '';
        
        switch(type) {
          case 'heading':
            propertiesHTML = `
              <div class="space-y-3">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Text</label>
                  <input type="text" class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" 
                         data-property="text" value="${element.querySelector('h2').textContent}">
                </div>
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Size</label>
                  <select class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" data-property="size">
                    <option value="text-xl">Small</option>
                    <option value="text-2xl" selected>Medium</option>
                    <option value="text-3xl">Large</option>
                    <option value="text-4xl">Extra Large</option>
                  </select>
                </div>
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Color</label>
                  <input type="color" class="property-input w-full h-10 border border-gray-300 rounded-lg" 
                         data-property="color" value="#111827">
                </div>
              </div>
            `;
            break;
          case 'paragraph':
            propertiesHTML = `
              <div class="space-y-3">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Text</label>
                  <textarea class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" 
                            rows="3" data-property="text">${element.querySelector('p').textContent}</textarea>
                </div>
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Font Size</label>
                  <select class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" data-property="fontSize">
                    <option value="text-sm">Small</option>
                    <option value="text-base" selected>Medium</option>
                    <option value="text-lg">Large</option>
                  </select>
                </div>
              </div>
            `;
            break;
          case 'button':
            propertiesHTML = `
              <div class="space-y-3">
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Button Text</label>
                  <input type="text" class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" 
                         data-property="text" value="${element.querySelector('a').textContent}">
                </div>
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Link URL</label>
                  <input type="url" class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" 
                         data-property="href" value="${element.querySelector('a').href}">
                </div>
                <div>
                  <label class="block text-xs font-medium text-gray-700 mb-1">Style</label>
                  <select class="property-input w-full px-3 py-2 text-sm border border-gray-300 rounded-lg" data-property="style">
                    <option value="gradient" selected>Gradient</option>
                    <option value="solid">Solid</option>
                    <option value="outline">Outline</option>
                  </select>
                </div>
              </div>
            `;
            break;
          default:
            propertiesHTML = '<p class="text-sm text-gray-500">No properties available for this component.</p>';
        }
        
        propertiesContent.innerHTML = propertiesHTML;
        
        // Add event listeners to property inputs
        const propertyInputs = propertiesContent.querySelectorAll('.property-input');
        propertyInputs.forEach(input => {
          input.addEventListener('input', () => updateComponentProperty(element, input));
        });
      }
      
      function hideProperties() {
        propertiesPanel.classList.add('hidden');
      }
      
      function updateComponentProperty(element, input) {
        const property = input.dataset.property;
        const value = input.value;
        
        switch(property) {
          case 'text':
            const textElement = element.querySelector('.editable');
            if (textElement) {
              textElement.textContent = value;
            }
            break;
          case 'href':
            const linkElement = element.querySelector('a');
            if (linkElement) {
              linkElement.href = value;
            }
            break;
          case 'size':
            const headingElement = element.querySelector('h2');
            if (headingElement) {
              headingElement.className = headingElement.className.replace(/text-\w+/, value) + ' font-bold text-gray-900 editable';
            }
            break;
          case 'color':
            const colorElement = element.querySelector('.editable');
            if (colorElement) {
              colorElement.style.color = value;
            }
            break;
        }
      }
      
      // Auto-save functionality (placeholder)
      setInterval(() => {
        // Auto-save logic would go here
        console.log('Auto-saving campaign...');
      }, 30000); // Auto-save every 30 seconds
    });
    
    // Helper functions for form interactions
    function updatePreview(elementId, value) {
      const element = document.getElementById(elementId);
      if (element) {
        element.textContent = value;
      }
    }
    
    function toggleTagSelection(recipientType) {
      const tagSelection = document.getElementById('tag-selection');
      if (recipientType === 'tags') {
        tagSelection.classList.remove('hidden');
      } else {
        tagSelection.classList.add('hidden');
      }
      updateRecipientCount();
    }
    
    function toggleScheduleOptions(sendType) {
      const scheduleOptions = document.getElementById('schedule-options');
      if (sendType === 'scheduled') {
        scheduleOptions.classList.remove('hidden');
      } else {
        scheduleOptions.classList.add('hidden');
      }
    }
    
    function updateRecipientCount() {
      // This would be enhanced with AJAX to get real-time counts
      const recipientType = document.querySelector('select[name="campaign[recipient_type]"]').value;
      const recipientCount = document.getElementById('recipient-count');
      
      if (recipientType === 'all') {
        recipientCount.textContent = '<%= @contacts&.count || 0 %> contacts';
      } else if (recipientType === 'tags') {
        const checkedTags = document.querySelectorAll('input[name="campaign[tag_ids][]"]');
        let count = 0;
        checkedTags.forEach(tag => {
          if (tag.checked) {
            // This would need to be calculated properly with AJAX
            count += parseInt(tag.parentElement.querySelector('.text-gray-500').textContent.match(/\d+/)[0]);
          }
        });
        recipientCount.textContent = count + ' contacts';
      }
    }
    
    // Preview functionality
    document.getElementById('preview-btn').addEventListener('click', function() {
      const form = document.getElementById('campaign-form');
      const formData = new FormData(form);
      
      // Open preview in new window/tab
      const previewUrl = '<%= preview_campaign_path(@campaign.persisted? ? @campaign : 0) %>';
      window.open(previewUrl, '_blank');
    });
  </script>
  
  <% end %>
</div>